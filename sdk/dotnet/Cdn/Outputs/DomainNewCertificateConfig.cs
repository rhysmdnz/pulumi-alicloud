// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cdn.Outputs
{

    [OutputType]
    public sealed class DomainNewCertificateConfig
    {
        /// <summary>
        /// The SSL certificate name.
        /// </summary>
        public readonly string? CertName;
        /// <summary>
        /// The SSL certificate type, can be "upload", "cas" and "free".
        /// </summary>
        public readonly string? CertType;
        /// <summary>
        /// Set `1` to ignore the repeated verification for certificate name, and cover the information of the origin certificate (with the same name). Set `0` to work the verification.
        /// </summary>
        public readonly string? ForceSet;
        /// <summary>
        /// The SSL private key. This is required if `server_certificate_status` is `on`
        /// </summary>
        public readonly string? PrivateKey;
        /// <summary>
        /// The SSL server certificate string. This is required if `server_certificate_status` is `on`
        /// </summary>
        public readonly string? ServerCertificate;
        /// <summary>
        /// This parameter indicates whether or not enable https. Valid values are `on` and `off`. Default value is `on`.
        /// </summary>
        public readonly string? ServerCertificateStatus;

        [OutputConstructor]
        private DomainNewCertificateConfig(
            string? certName,

            string? certType,

            string? forceSet,

            string? privateKey,

            string? serverCertificate,

            string? serverCertificateStatus)
        {
            CertName = certName;
            CertType = certType;
            ForceSet = forceSet;
            PrivateKey = privateKey;
            ServerCertificate = serverCertificate;
            ServerCertificateStatus = serverCertificateStatus;
        }
    }
}
