// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ots

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TableDefinedColumn struct {
	// Name for defined column.
	Name string `pulumi:"name"`
	// Type for defined column. `Integer`, `String`, `Binary`, `Double`, `Boolean` is allowed.
	Type string `pulumi:"type"`
}

// TableDefinedColumnInput is an input type that accepts TableDefinedColumnArgs and TableDefinedColumnOutput values.
// You can construct a concrete instance of `TableDefinedColumnInput` via:
//
//	TableDefinedColumnArgs{...}
type TableDefinedColumnInput interface {
	pulumi.Input

	ToTableDefinedColumnOutput() TableDefinedColumnOutput
	ToTableDefinedColumnOutputWithContext(context.Context) TableDefinedColumnOutput
}

type TableDefinedColumnArgs struct {
	// Name for defined column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type for defined column. `Integer`, `String`, `Binary`, `Double`, `Boolean` is allowed.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TableDefinedColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableDefinedColumn)(nil)).Elem()
}

func (i TableDefinedColumnArgs) ToTableDefinedColumnOutput() TableDefinedColumnOutput {
	return i.ToTableDefinedColumnOutputWithContext(context.Background())
}

func (i TableDefinedColumnArgs) ToTableDefinedColumnOutputWithContext(ctx context.Context) TableDefinedColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableDefinedColumnOutput)
}

// TableDefinedColumnArrayInput is an input type that accepts TableDefinedColumnArray and TableDefinedColumnArrayOutput values.
// You can construct a concrete instance of `TableDefinedColumnArrayInput` via:
//
//	TableDefinedColumnArray{ TableDefinedColumnArgs{...} }
type TableDefinedColumnArrayInput interface {
	pulumi.Input

	ToTableDefinedColumnArrayOutput() TableDefinedColumnArrayOutput
	ToTableDefinedColumnArrayOutputWithContext(context.Context) TableDefinedColumnArrayOutput
}

type TableDefinedColumnArray []TableDefinedColumnInput

func (TableDefinedColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableDefinedColumn)(nil)).Elem()
}

func (i TableDefinedColumnArray) ToTableDefinedColumnArrayOutput() TableDefinedColumnArrayOutput {
	return i.ToTableDefinedColumnArrayOutputWithContext(context.Background())
}

func (i TableDefinedColumnArray) ToTableDefinedColumnArrayOutputWithContext(ctx context.Context) TableDefinedColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableDefinedColumnArrayOutput)
}

type TableDefinedColumnOutput struct{ *pulumi.OutputState }

func (TableDefinedColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableDefinedColumn)(nil)).Elem()
}

func (o TableDefinedColumnOutput) ToTableDefinedColumnOutput() TableDefinedColumnOutput {
	return o
}

func (o TableDefinedColumnOutput) ToTableDefinedColumnOutputWithContext(ctx context.Context) TableDefinedColumnOutput {
	return o
}

// Name for defined column.
func (o TableDefinedColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TableDefinedColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type for defined column. `Integer`, `String`, `Binary`, `Double`, `Boolean` is allowed.
func (o TableDefinedColumnOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TableDefinedColumn) string { return v.Type }).(pulumi.StringOutput)
}

type TableDefinedColumnArrayOutput struct{ *pulumi.OutputState }

func (TableDefinedColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableDefinedColumn)(nil)).Elem()
}

func (o TableDefinedColumnArrayOutput) ToTableDefinedColumnArrayOutput() TableDefinedColumnArrayOutput {
	return o
}

func (o TableDefinedColumnArrayOutput) ToTableDefinedColumnArrayOutputWithContext(ctx context.Context) TableDefinedColumnArrayOutput {
	return o
}

func (o TableDefinedColumnArrayOutput) Index(i pulumi.IntInput) TableDefinedColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TableDefinedColumn {
		return vs[0].([]TableDefinedColumn)[vs[1].(int)]
	}).(TableDefinedColumnOutput)
}

type TablePrimaryKey struct {
	// Name for defined column.
	Name string `pulumi:"name"`
	// Type for defined column. `Integer`, `String`, `Binary`, `Double`, `Boolean` is allowed.
	Type string `pulumi:"type"`
}

// TablePrimaryKeyInput is an input type that accepts TablePrimaryKeyArgs and TablePrimaryKeyOutput values.
// You can construct a concrete instance of `TablePrimaryKeyInput` via:
//
//	TablePrimaryKeyArgs{...}
type TablePrimaryKeyInput interface {
	pulumi.Input

	ToTablePrimaryKeyOutput() TablePrimaryKeyOutput
	ToTablePrimaryKeyOutputWithContext(context.Context) TablePrimaryKeyOutput
}

type TablePrimaryKeyArgs struct {
	// Name for defined column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type for defined column. `Integer`, `String`, `Binary`, `Double`, `Boolean` is allowed.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TablePrimaryKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TablePrimaryKey)(nil)).Elem()
}

func (i TablePrimaryKeyArgs) ToTablePrimaryKeyOutput() TablePrimaryKeyOutput {
	return i.ToTablePrimaryKeyOutputWithContext(context.Background())
}

func (i TablePrimaryKeyArgs) ToTablePrimaryKeyOutputWithContext(ctx context.Context) TablePrimaryKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablePrimaryKeyOutput)
}

// TablePrimaryKeyArrayInput is an input type that accepts TablePrimaryKeyArray and TablePrimaryKeyArrayOutput values.
// You can construct a concrete instance of `TablePrimaryKeyArrayInput` via:
//
//	TablePrimaryKeyArray{ TablePrimaryKeyArgs{...} }
type TablePrimaryKeyArrayInput interface {
	pulumi.Input

	ToTablePrimaryKeyArrayOutput() TablePrimaryKeyArrayOutput
	ToTablePrimaryKeyArrayOutputWithContext(context.Context) TablePrimaryKeyArrayOutput
}

type TablePrimaryKeyArray []TablePrimaryKeyInput

func (TablePrimaryKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TablePrimaryKey)(nil)).Elem()
}

func (i TablePrimaryKeyArray) ToTablePrimaryKeyArrayOutput() TablePrimaryKeyArrayOutput {
	return i.ToTablePrimaryKeyArrayOutputWithContext(context.Background())
}

func (i TablePrimaryKeyArray) ToTablePrimaryKeyArrayOutputWithContext(ctx context.Context) TablePrimaryKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablePrimaryKeyArrayOutput)
}

type TablePrimaryKeyOutput struct{ *pulumi.OutputState }

func (TablePrimaryKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TablePrimaryKey)(nil)).Elem()
}

func (o TablePrimaryKeyOutput) ToTablePrimaryKeyOutput() TablePrimaryKeyOutput {
	return o
}

func (o TablePrimaryKeyOutput) ToTablePrimaryKeyOutputWithContext(ctx context.Context) TablePrimaryKeyOutput {
	return o
}

// Name for defined column.
func (o TablePrimaryKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TablePrimaryKey) string { return v.Name }).(pulumi.StringOutput)
}

// Type for defined column. `Integer`, `String`, `Binary`, `Double`, `Boolean` is allowed.
func (o TablePrimaryKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TablePrimaryKey) string { return v.Type }).(pulumi.StringOutput)
}

type TablePrimaryKeyArrayOutput struct{ *pulumi.OutputState }

func (TablePrimaryKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TablePrimaryKey)(nil)).Elem()
}

func (o TablePrimaryKeyArrayOutput) ToTablePrimaryKeyArrayOutput() TablePrimaryKeyArrayOutput {
	return o
}

func (o TablePrimaryKeyArrayOutput) ToTablePrimaryKeyArrayOutputWithContext(ctx context.Context) TablePrimaryKeyArrayOutput {
	return o
}

func (o TablePrimaryKeyArrayOutput) Index(i pulumi.IntInput) TablePrimaryKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TablePrimaryKey {
		return vs[0].([]TablePrimaryKey)[vs[1].(int)]
	}).(TablePrimaryKeyOutput)
}

type TunnelChannel struct {
	// The id of the channel.
	ChannelId *string `pulumi:"channelId"`
	// The latest consumption time of the channel, unix time in nanosecond.
	ChannelRpo *int `pulumi:"channelRpo"`
	// The status of the channel, valid values: `WAIT`, `OPEN`, `CLOSING`, `CLOSE`, `TERMINATED`.
	ChannelStatus *string `pulumi:"channelStatus"`
	// The type of the channel, valid values: `BaseData`, `Stream`.
	ChannelType *string `pulumi:"channelType"`
	// The client id of the channel.
	ClientId *string `pulumi:"clientId"`
}

// TunnelChannelInput is an input type that accepts TunnelChannelArgs and TunnelChannelOutput values.
// You can construct a concrete instance of `TunnelChannelInput` via:
//
//	TunnelChannelArgs{...}
type TunnelChannelInput interface {
	pulumi.Input

	ToTunnelChannelOutput() TunnelChannelOutput
	ToTunnelChannelOutputWithContext(context.Context) TunnelChannelOutput
}

type TunnelChannelArgs struct {
	// The id of the channel.
	ChannelId pulumi.StringPtrInput `pulumi:"channelId"`
	// The latest consumption time of the channel, unix time in nanosecond.
	ChannelRpo pulumi.IntPtrInput `pulumi:"channelRpo"`
	// The status of the channel, valid values: `WAIT`, `OPEN`, `CLOSING`, `CLOSE`, `TERMINATED`.
	ChannelStatus pulumi.StringPtrInput `pulumi:"channelStatus"`
	// The type of the channel, valid values: `BaseData`, `Stream`.
	ChannelType pulumi.StringPtrInput `pulumi:"channelType"`
	// The client id of the channel.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
}

func (TunnelChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelChannel)(nil)).Elem()
}

func (i TunnelChannelArgs) ToTunnelChannelOutput() TunnelChannelOutput {
	return i.ToTunnelChannelOutputWithContext(context.Background())
}

func (i TunnelChannelArgs) ToTunnelChannelOutputWithContext(ctx context.Context) TunnelChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelChannelOutput)
}

// TunnelChannelArrayInput is an input type that accepts TunnelChannelArray and TunnelChannelArrayOutput values.
// You can construct a concrete instance of `TunnelChannelArrayInput` via:
//
//	TunnelChannelArray{ TunnelChannelArgs{...} }
type TunnelChannelArrayInput interface {
	pulumi.Input

	ToTunnelChannelArrayOutput() TunnelChannelArrayOutput
	ToTunnelChannelArrayOutputWithContext(context.Context) TunnelChannelArrayOutput
}

type TunnelChannelArray []TunnelChannelInput

func (TunnelChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TunnelChannel)(nil)).Elem()
}

func (i TunnelChannelArray) ToTunnelChannelArrayOutput() TunnelChannelArrayOutput {
	return i.ToTunnelChannelArrayOutputWithContext(context.Background())
}

func (i TunnelChannelArray) ToTunnelChannelArrayOutputWithContext(ctx context.Context) TunnelChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelChannelArrayOutput)
}

type TunnelChannelOutput struct{ *pulumi.OutputState }

func (TunnelChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelChannel)(nil)).Elem()
}

func (o TunnelChannelOutput) ToTunnelChannelOutput() TunnelChannelOutput {
	return o
}

func (o TunnelChannelOutput) ToTunnelChannelOutputWithContext(ctx context.Context) TunnelChannelOutput {
	return o
}

// The id of the channel.
func (o TunnelChannelOutput) ChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TunnelChannel) *string { return v.ChannelId }).(pulumi.StringPtrOutput)
}

// The latest consumption time of the channel, unix time in nanosecond.
func (o TunnelChannelOutput) ChannelRpo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TunnelChannel) *int { return v.ChannelRpo }).(pulumi.IntPtrOutput)
}

// The status of the channel, valid values: `WAIT`, `OPEN`, `CLOSING`, `CLOSE`, `TERMINATED`.
func (o TunnelChannelOutput) ChannelStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TunnelChannel) *string { return v.ChannelStatus }).(pulumi.StringPtrOutput)
}

// The type of the channel, valid values: `BaseData`, `Stream`.
func (o TunnelChannelOutput) ChannelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TunnelChannel) *string { return v.ChannelType }).(pulumi.StringPtrOutput)
}

// The client id of the channel.
func (o TunnelChannelOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TunnelChannel) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

type TunnelChannelArrayOutput struct{ *pulumi.OutputState }

func (TunnelChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TunnelChannel)(nil)).Elem()
}

func (o TunnelChannelArrayOutput) ToTunnelChannelArrayOutput() TunnelChannelArrayOutput {
	return o
}

func (o TunnelChannelArrayOutput) ToTunnelChannelArrayOutputWithContext(ctx context.Context) TunnelChannelArrayOutput {
	return o
}

func (o TunnelChannelArrayOutput) Index(i pulumi.IntInput) TunnelChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TunnelChannel {
		return vs[0].([]TunnelChannel)[vs[1].(int)]
	}).(TunnelChannelOutput)
}

type GetInstanceAttachmentsAttachment struct {
	// The domain of the instance attachment.
	Domain string `pulumi:"domain"`
	// The access endpoint of the instance attachment.
	Endpoint string `pulumi:"endpoint"`
	// The resource ID, the value is same as "instanceName".
	Id string `pulumi:"id"`
	// The name of OTS instance.
	InstanceName string `pulumi:"instanceName"`
	// The region of the instance attachment.
	Region string `pulumi:"region"`
	// The ID of attaching VPC to instance.
	VpcId string `pulumi:"vpcId"`
	// The name of attaching VPC to instance.
	VpcName string `pulumi:"vpcName"`
}

// GetInstanceAttachmentsAttachmentInput is an input type that accepts GetInstanceAttachmentsAttachmentArgs and GetInstanceAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetInstanceAttachmentsAttachmentInput` via:
//
//	GetInstanceAttachmentsAttachmentArgs{...}
type GetInstanceAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetInstanceAttachmentsAttachmentOutput() GetInstanceAttachmentsAttachmentOutput
	ToGetInstanceAttachmentsAttachmentOutputWithContext(context.Context) GetInstanceAttachmentsAttachmentOutput
}

type GetInstanceAttachmentsAttachmentArgs struct {
	// The domain of the instance attachment.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The access endpoint of the instance attachment.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The resource ID, the value is same as "instanceName".
	Id pulumi.StringInput `pulumi:"id"`
	// The name of OTS instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The region of the instance attachment.
	Region pulumi.StringInput `pulumi:"region"`
	// The ID of attaching VPC to instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The name of attaching VPC to instance.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (GetInstanceAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAttachmentsAttachment)(nil)).Elem()
}

func (i GetInstanceAttachmentsAttachmentArgs) ToGetInstanceAttachmentsAttachmentOutput() GetInstanceAttachmentsAttachmentOutput {
	return i.ToGetInstanceAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetInstanceAttachmentsAttachmentArgs) ToGetInstanceAttachmentsAttachmentOutputWithContext(ctx context.Context) GetInstanceAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAttachmentsAttachmentOutput)
}

// GetInstanceAttachmentsAttachmentArrayInput is an input type that accepts GetInstanceAttachmentsAttachmentArray and GetInstanceAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetInstanceAttachmentsAttachmentArrayInput` via:
//
//	GetInstanceAttachmentsAttachmentArray{ GetInstanceAttachmentsAttachmentArgs{...} }
type GetInstanceAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetInstanceAttachmentsAttachmentArrayOutput() GetInstanceAttachmentsAttachmentArrayOutput
	ToGetInstanceAttachmentsAttachmentArrayOutputWithContext(context.Context) GetInstanceAttachmentsAttachmentArrayOutput
}

type GetInstanceAttachmentsAttachmentArray []GetInstanceAttachmentsAttachmentInput

func (GetInstanceAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAttachmentsAttachment)(nil)).Elem()
}

func (i GetInstanceAttachmentsAttachmentArray) ToGetInstanceAttachmentsAttachmentArrayOutput() GetInstanceAttachmentsAttachmentArrayOutput {
	return i.ToGetInstanceAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetInstanceAttachmentsAttachmentArray) ToGetInstanceAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetInstanceAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAttachmentsAttachmentArrayOutput)
}

type GetInstanceAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetInstanceAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAttachmentsAttachment)(nil)).Elem()
}

func (o GetInstanceAttachmentsAttachmentOutput) ToGetInstanceAttachmentsAttachmentOutput() GetInstanceAttachmentsAttachmentOutput {
	return o
}

func (o GetInstanceAttachmentsAttachmentOutput) ToGetInstanceAttachmentsAttachmentOutputWithContext(ctx context.Context) GetInstanceAttachmentsAttachmentOutput {
	return o
}

// The domain of the instance attachment.
func (o GetInstanceAttachmentsAttachmentOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.Domain }).(pulumi.StringOutput)
}

// The access endpoint of the instance attachment.
func (o GetInstanceAttachmentsAttachmentOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The resource ID, the value is same as "instanceName".
func (o GetInstanceAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// The name of OTS instance.
func (o GetInstanceAttachmentsAttachmentOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The region of the instance attachment.
func (o GetInstanceAttachmentsAttachmentOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.Region }).(pulumi.StringOutput)
}

// The ID of attaching VPC to instance.
func (o GetInstanceAttachmentsAttachmentOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.VpcId }).(pulumi.StringOutput)
}

// The name of attaching VPC to instance.
func (o GetInstanceAttachmentsAttachmentOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.VpcName }).(pulumi.StringOutput)
}

type GetInstanceAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAttachmentsAttachment)(nil)).Elem()
}

func (o GetInstanceAttachmentsAttachmentArrayOutput) ToGetInstanceAttachmentsAttachmentArrayOutput() GetInstanceAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetInstanceAttachmentsAttachmentArrayOutput) ToGetInstanceAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetInstanceAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetInstanceAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetInstanceAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceAttachmentsAttachment {
		return vs[0].([]GetInstanceAttachmentsAttachment)[vs[1].(int)]
	}).(GetInstanceAttachmentsAttachmentOutput)
}

type GetInstancesInstance struct {
	// The cluster type of the instance. Possible values: `SSD`, `HYBRID`.
	ClusterType string `pulumi:"clusterType"`
	// The create time of the instance.
	CreateTime string `pulumi:"createTime"`
	// The description of the instance.
	Description string `pulumi:"description"`
	// The instance quota which indicating the maximum number of tables.
	EntityQuota int `pulumi:"entityQuota"`
	// ID of the instance.
	Id string `pulumi:"id"`
	// Instance name.
	Name string `pulumi:"name"`
	// The network type of the instance. Possible values: `NORMAL`, `VPC`, `VPC_CONSOLE`.
	Network string `pulumi:"network"`
	// The maximum adjustable read capacity unit of the instance.
	ReadCapacity int `pulumi:"readCapacity"`
	// Instance status. Possible values: `Running`, `Disabled`, `Deleting`.
	Status string `pulumi:"status"`
	// A map of tags assigned to the instance. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/go/alicloud/ots"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// 	"github.com/rhysmdnz/pulumi-alicloud/sdk/go/alicloud/ots"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := ots.GetInstances(ctx, &ots.GetInstancesArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags map[string]interface{} `pulumi:"tags"`
	// The user id of the instance.
	UserId string `pulumi:"userId"`
	// The maximum adjustable write capacity unit of the instance.
	WriteCapacity int `pulumi:"writeCapacity"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The cluster type of the instance. Possible values: `SSD`, `HYBRID`.
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// The create time of the instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the instance.
	Description pulumi.StringInput `pulumi:"description"`
	// The instance quota which indicating the maximum number of tables.
	EntityQuota pulumi.IntInput `pulumi:"entityQuota"`
	// ID of the instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Instance name.
	Name pulumi.StringInput `pulumi:"name"`
	// The network type of the instance. Possible values: `NORMAL`, `VPC`, `VPC_CONSOLE`.
	Network pulumi.StringInput `pulumi:"network"`
	// The maximum adjustable read capacity unit of the instance.
	ReadCapacity pulumi.IntInput `pulumi:"readCapacity"`
	// Instance status. Possible values: `Running`, `Disabled`, `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// A map of tags assigned to the instance. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/go/alicloud/ots"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// 	"github.com/rhysmdnz/pulumi-alicloud/sdk/go/alicloud/ots"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := ots.GetInstances(ctx, &ots.GetInstancesArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags pulumi.MapInput `pulumi:"tags"`
	// The user id of the instance.
	UserId pulumi.StringInput `pulumi:"userId"`
	// The maximum adjustable write capacity unit of the instance.
	WriteCapacity pulumi.IntInput `pulumi:"writeCapacity"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The cluster type of the instance. Possible values: `SSD`, `HYBRID`.
func (o GetInstancesInstanceOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ClusterType }).(pulumi.StringOutput)
}

// The create time of the instance.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the instance.
func (o GetInstancesInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Description }).(pulumi.StringOutput)
}

// The instance quota which indicating the maximum number of tables.
func (o GetInstancesInstanceOutput) EntityQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.EntityQuota }).(pulumi.IntOutput)
}

// ID of the instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Instance name.
func (o GetInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// The network type of the instance. Possible values: `NORMAL`, `VPC`, `VPC_CONSOLE`.
func (o GetInstancesInstanceOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Network }).(pulumi.StringOutput)
}

// The maximum adjustable read capacity unit of the instance.
func (o GetInstancesInstanceOutput) ReadCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.ReadCapacity }).(pulumi.IntOutput)
}

// Instance status. Possible values: `Running`, `Disabled`, `Deleting`.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the instance. It must be in the format:
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/go/alicloud/ots"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/rhysmdnz/pulumi-alicloud/sdk/go/alicloud/ots"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ots.GetInstances(ctx, &ots.GetInstancesArgs{
//				Tags: map[string]interface{}{
//					"tagKey1": "tagValue1",
//					"tagKey2": "tagValue2",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func (o GetInstancesInstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The user id of the instance.
func (o GetInstancesInstanceOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.UserId }).(pulumi.StringOutput)
}

// The maximum adjustable write capacity unit of the instance.
func (o GetInstancesInstanceOutput) WriteCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.WriteCapacity }).(pulumi.IntOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetTablesTable struct {
	DefinedColumns []GetTablesTableDefinedColumn `pulumi:"definedColumns"`
	// ID of the table. The value is `<instance_name>:<table_name>`.
	Id string `pulumi:"id"`
	// The name of OTS instance.
	InstanceName string `pulumi:"instanceName"`
	// The maximum number of versions stored in this table.
	MaxVersion int `pulumi:"maxVersion"`
	// The property of `TableMeta` which indicates the structure information of a table.
	PrimaryKeys []GetTablesTablePrimaryKey `pulumi:"primaryKeys"`
	// The table name of the OTS which could not be changed.
	TableName string `pulumi:"tableName"`
	// The retention time of data stored in this table.
	TimeToLive int `pulumi:"timeToLive"`
}

// GetTablesTableInput is an input type that accepts GetTablesTableArgs and GetTablesTableOutput values.
// You can construct a concrete instance of `GetTablesTableInput` via:
//
//	GetTablesTableArgs{...}
type GetTablesTableInput interface {
	pulumi.Input

	ToGetTablesTableOutput() GetTablesTableOutput
	ToGetTablesTableOutputWithContext(context.Context) GetTablesTableOutput
}

type GetTablesTableArgs struct {
	DefinedColumns GetTablesTableDefinedColumnArrayInput `pulumi:"definedColumns"`
	// ID of the table. The value is `<instance_name>:<table_name>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of OTS instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The maximum number of versions stored in this table.
	MaxVersion pulumi.IntInput `pulumi:"maxVersion"`
	// The property of `TableMeta` which indicates the structure information of a table.
	PrimaryKeys GetTablesTablePrimaryKeyArrayInput `pulumi:"primaryKeys"`
	// The table name of the OTS which could not be changed.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// The retention time of data stored in this table.
	TimeToLive pulumi.IntInput `pulumi:"timeToLive"`
}

func (GetTablesTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTablesTable)(nil)).Elem()
}

func (i GetTablesTableArgs) ToGetTablesTableOutput() GetTablesTableOutput {
	return i.ToGetTablesTableOutputWithContext(context.Background())
}

func (i GetTablesTableArgs) ToGetTablesTableOutputWithContext(ctx context.Context) GetTablesTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTablesTableOutput)
}

// GetTablesTableArrayInput is an input type that accepts GetTablesTableArray and GetTablesTableArrayOutput values.
// You can construct a concrete instance of `GetTablesTableArrayInput` via:
//
//	GetTablesTableArray{ GetTablesTableArgs{...} }
type GetTablesTableArrayInput interface {
	pulumi.Input

	ToGetTablesTableArrayOutput() GetTablesTableArrayOutput
	ToGetTablesTableArrayOutputWithContext(context.Context) GetTablesTableArrayOutput
}

type GetTablesTableArray []GetTablesTableInput

func (GetTablesTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTablesTable)(nil)).Elem()
}

func (i GetTablesTableArray) ToGetTablesTableArrayOutput() GetTablesTableArrayOutput {
	return i.ToGetTablesTableArrayOutputWithContext(context.Background())
}

func (i GetTablesTableArray) ToGetTablesTableArrayOutputWithContext(ctx context.Context) GetTablesTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTablesTableArrayOutput)
}

type GetTablesTableOutput struct{ *pulumi.OutputState }

func (GetTablesTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTablesTable)(nil)).Elem()
}

func (o GetTablesTableOutput) ToGetTablesTableOutput() GetTablesTableOutput {
	return o
}

func (o GetTablesTableOutput) ToGetTablesTableOutputWithContext(ctx context.Context) GetTablesTableOutput {
	return o
}

func (o GetTablesTableOutput) DefinedColumns() GetTablesTableDefinedColumnArrayOutput {
	return o.ApplyT(func(v GetTablesTable) []GetTablesTableDefinedColumn { return v.DefinedColumns }).(GetTablesTableDefinedColumnArrayOutput)
}

// ID of the table. The value is `<instance_name>:<table_name>`.
func (o GetTablesTableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesTable) string { return v.Id }).(pulumi.StringOutput)
}

// The name of OTS instance.
func (o GetTablesTableOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesTable) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The maximum number of versions stored in this table.
func (o GetTablesTableOutput) MaxVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetTablesTable) int { return v.MaxVersion }).(pulumi.IntOutput)
}

// The property of `TableMeta` which indicates the structure information of a table.
func (o GetTablesTableOutput) PrimaryKeys() GetTablesTablePrimaryKeyArrayOutput {
	return o.ApplyT(func(v GetTablesTable) []GetTablesTablePrimaryKey { return v.PrimaryKeys }).(GetTablesTablePrimaryKeyArrayOutput)
}

// The table name of the OTS which could not be changed.
func (o GetTablesTableOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesTable) string { return v.TableName }).(pulumi.StringOutput)
}

// The retention time of data stored in this table.
func (o GetTablesTableOutput) TimeToLive() pulumi.IntOutput {
	return o.ApplyT(func(v GetTablesTable) int { return v.TimeToLive }).(pulumi.IntOutput)
}

type GetTablesTableArrayOutput struct{ *pulumi.OutputState }

func (GetTablesTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTablesTable)(nil)).Elem()
}

func (o GetTablesTableArrayOutput) ToGetTablesTableArrayOutput() GetTablesTableArrayOutput {
	return o
}

func (o GetTablesTableArrayOutput) ToGetTablesTableArrayOutputWithContext(ctx context.Context) GetTablesTableArrayOutput {
	return o
}

func (o GetTablesTableArrayOutput) Index(i pulumi.IntInput) GetTablesTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTablesTable {
		return vs[0].([]GetTablesTable)[vs[1].(int)]
	}).(GetTablesTableOutput)
}

type GetTablesTableDefinedColumn struct {
	Name string `pulumi:"name"`
	Type string `pulumi:"type"`
}

// GetTablesTableDefinedColumnInput is an input type that accepts GetTablesTableDefinedColumnArgs and GetTablesTableDefinedColumnOutput values.
// You can construct a concrete instance of `GetTablesTableDefinedColumnInput` via:
//
//	GetTablesTableDefinedColumnArgs{...}
type GetTablesTableDefinedColumnInput interface {
	pulumi.Input

	ToGetTablesTableDefinedColumnOutput() GetTablesTableDefinedColumnOutput
	ToGetTablesTableDefinedColumnOutputWithContext(context.Context) GetTablesTableDefinedColumnOutput
}

type GetTablesTableDefinedColumnArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTablesTableDefinedColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTablesTableDefinedColumn)(nil)).Elem()
}

func (i GetTablesTableDefinedColumnArgs) ToGetTablesTableDefinedColumnOutput() GetTablesTableDefinedColumnOutput {
	return i.ToGetTablesTableDefinedColumnOutputWithContext(context.Background())
}

func (i GetTablesTableDefinedColumnArgs) ToGetTablesTableDefinedColumnOutputWithContext(ctx context.Context) GetTablesTableDefinedColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTablesTableDefinedColumnOutput)
}

// GetTablesTableDefinedColumnArrayInput is an input type that accepts GetTablesTableDefinedColumnArray and GetTablesTableDefinedColumnArrayOutput values.
// You can construct a concrete instance of `GetTablesTableDefinedColumnArrayInput` via:
//
//	GetTablesTableDefinedColumnArray{ GetTablesTableDefinedColumnArgs{...} }
type GetTablesTableDefinedColumnArrayInput interface {
	pulumi.Input

	ToGetTablesTableDefinedColumnArrayOutput() GetTablesTableDefinedColumnArrayOutput
	ToGetTablesTableDefinedColumnArrayOutputWithContext(context.Context) GetTablesTableDefinedColumnArrayOutput
}

type GetTablesTableDefinedColumnArray []GetTablesTableDefinedColumnInput

func (GetTablesTableDefinedColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTablesTableDefinedColumn)(nil)).Elem()
}

func (i GetTablesTableDefinedColumnArray) ToGetTablesTableDefinedColumnArrayOutput() GetTablesTableDefinedColumnArrayOutput {
	return i.ToGetTablesTableDefinedColumnArrayOutputWithContext(context.Background())
}

func (i GetTablesTableDefinedColumnArray) ToGetTablesTableDefinedColumnArrayOutputWithContext(ctx context.Context) GetTablesTableDefinedColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTablesTableDefinedColumnArrayOutput)
}

type GetTablesTableDefinedColumnOutput struct{ *pulumi.OutputState }

func (GetTablesTableDefinedColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTablesTableDefinedColumn)(nil)).Elem()
}

func (o GetTablesTableDefinedColumnOutput) ToGetTablesTableDefinedColumnOutput() GetTablesTableDefinedColumnOutput {
	return o
}

func (o GetTablesTableDefinedColumnOutput) ToGetTablesTableDefinedColumnOutputWithContext(ctx context.Context) GetTablesTableDefinedColumnOutput {
	return o
}

func (o GetTablesTableDefinedColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesTableDefinedColumn) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTablesTableDefinedColumnOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesTableDefinedColumn) string { return v.Type }).(pulumi.StringOutput)
}

type GetTablesTableDefinedColumnArrayOutput struct{ *pulumi.OutputState }

func (GetTablesTableDefinedColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTablesTableDefinedColumn)(nil)).Elem()
}

func (o GetTablesTableDefinedColumnArrayOutput) ToGetTablesTableDefinedColumnArrayOutput() GetTablesTableDefinedColumnArrayOutput {
	return o
}

func (o GetTablesTableDefinedColumnArrayOutput) ToGetTablesTableDefinedColumnArrayOutputWithContext(ctx context.Context) GetTablesTableDefinedColumnArrayOutput {
	return o
}

func (o GetTablesTableDefinedColumnArrayOutput) Index(i pulumi.IntInput) GetTablesTableDefinedColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTablesTableDefinedColumn {
		return vs[0].([]GetTablesTableDefinedColumn)[vs[1].(int)]
	}).(GetTablesTableDefinedColumnOutput)
}

type GetTablesTablePrimaryKey struct {
	Name string `pulumi:"name"`
	Type string `pulumi:"type"`
}

// GetTablesTablePrimaryKeyInput is an input type that accepts GetTablesTablePrimaryKeyArgs and GetTablesTablePrimaryKeyOutput values.
// You can construct a concrete instance of `GetTablesTablePrimaryKeyInput` via:
//
//	GetTablesTablePrimaryKeyArgs{...}
type GetTablesTablePrimaryKeyInput interface {
	pulumi.Input

	ToGetTablesTablePrimaryKeyOutput() GetTablesTablePrimaryKeyOutput
	ToGetTablesTablePrimaryKeyOutputWithContext(context.Context) GetTablesTablePrimaryKeyOutput
}

type GetTablesTablePrimaryKeyArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTablesTablePrimaryKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTablesTablePrimaryKey)(nil)).Elem()
}

func (i GetTablesTablePrimaryKeyArgs) ToGetTablesTablePrimaryKeyOutput() GetTablesTablePrimaryKeyOutput {
	return i.ToGetTablesTablePrimaryKeyOutputWithContext(context.Background())
}

func (i GetTablesTablePrimaryKeyArgs) ToGetTablesTablePrimaryKeyOutputWithContext(ctx context.Context) GetTablesTablePrimaryKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTablesTablePrimaryKeyOutput)
}

// GetTablesTablePrimaryKeyArrayInput is an input type that accepts GetTablesTablePrimaryKeyArray and GetTablesTablePrimaryKeyArrayOutput values.
// You can construct a concrete instance of `GetTablesTablePrimaryKeyArrayInput` via:
//
//	GetTablesTablePrimaryKeyArray{ GetTablesTablePrimaryKeyArgs{...} }
type GetTablesTablePrimaryKeyArrayInput interface {
	pulumi.Input

	ToGetTablesTablePrimaryKeyArrayOutput() GetTablesTablePrimaryKeyArrayOutput
	ToGetTablesTablePrimaryKeyArrayOutputWithContext(context.Context) GetTablesTablePrimaryKeyArrayOutput
}

type GetTablesTablePrimaryKeyArray []GetTablesTablePrimaryKeyInput

func (GetTablesTablePrimaryKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTablesTablePrimaryKey)(nil)).Elem()
}

func (i GetTablesTablePrimaryKeyArray) ToGetTablesTablePrimaryKeyArrayOutput() GetTablesTablePrimaryKeyArrayOutput {
	return i.ToGetTablesTablePrimaryKeyArrayOutputWithContext(context.Background())
}

func (i GetTablesTablePrimaryKeyArray) ToGetTablesTablePrimaryKeyArrayOutputWithContext(ctx context.Context) GetTablesTablePrimaryKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTablesTablePrimaryKeyArrayOutput)
}

type GetTablesTablePrimaryKeyOutput struct{ *pulumi.OutputState }

func (GetTablesTablePrimaryKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTablesTablePrimaryKey)(nil)).Elem()
}

func (o GetTablesTablePrimaryKeyOutput) ToGetTablesTablePrimaryKeyOutput() GetTablesTablePrimaryKeyOutput {
	return o
}

func (o GetTablesTablePrimaryKeyOutput) ToGetTablesTablePrimaryKeyOutputWithContext(ctx context.Context) GetTablesTablePrimaryKeyOutput {
	return o
}

func (o GetTablesTablePrimaryKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesTablePrimaryKey) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTablesTablePrimaryKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesTablePrimaryKey) string { return v.Type }).(pulumi.StringOutput)
}

type GetTablesTablePrimaryKeyArrayOutput struct{ *pulumi.OutputState }

func (GetTablesTablePrimaryKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTablesTablePrimaryKey)(nil)).Elem()
}

func (o GetTablesTablePrimaryKeyArrayOutput) ToGetTablesTablePrimaryKeyArrayOutput() GetTablesTablePrimaryKeyArrayOutput {
	return o
}

func (o GetTablesTablePrimaryKeyArrayOutput) ToGetTablesTablePrimaryKeyArrayOutputWithContext(ctx context.Context) GetTablesTablePrimaryKeyArrayOutput {
	return o
}

func (o GetTablesTablePrimaryKeyArrayOutput) Index(i pulumi.IntInput) GetTablesTablePrimaryKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTablesTablePrimaryKey {
		return vs[0].([]GetTablesTablePrimaryKey)[vs[1].(int)]
	}).(GetTablesTablePrimaryKeyOutput)
}

type GetTunnelsTunnel struct {
	// The channels of OTS tunnel. Each element contains the following attributes:
	Channels []GetTunnelsTunnelChannel `pulumi:"channels"`
	// The creation time of the Tunnel.
	CreateTime int `pulumi:"createTime"`
	// Whether the tunnel has expired.
	Expired bool `pulumi:"expired"`
	// The resource ID. The value is `<instance_name>:<table_name>:<tunnel_name>`.
	Id string `pulumi:"id"`
	// The name of OTS instance.
	InstanceName string `pulumi:"instanceName"`
	// The name of OTS table.
	TableName string `pulumi:"tableName"`
	// The tunnel id of the OTS which could not be changed.
	TunnelId string `pulumi:"tunnelId"`
	// The tunnel name of the OTS which could not be changed.
	TunnelName string `pulumi:"tunnelName"`
	// The latest consumption time of the tunnel, unix time in nanosecond.
	TunnelRpo int `pulumi:"tunnelRpo"`
	// The stage of OTS tunnel, valid values: `InitBaseDataAndStreamShard`, `ProcessBaseData`, `ProcessStream`.
	TunnelStage string `pulumi:"tunnelStage"`
	// The type of the OTS tunnel, valid values: `BaseAndStream`, `BaseData`, `Stream`.
	TunnelType string `pulumi:"tunnelType"`
}

// GetTunnelsTunnelInput is an input type that accepts GetTunnelsTunnelArgs and GetTunnelsTunnelOutput values.
// You can construct a concrete instance of `GetTunnelsTunnelInput` via:
//
//	GetTunnelsTunnelArgs{...}
type GetTunnelsTunnelInput interface {
	pulumi.Input

	ToGetTunnelsTunnelOutput() GetTunnelsTunnelOutput
	ToGetTunnelsTunnelOutputWithContext(context.Context) GetTunnelsTunnelOutput
}

type GetTunnelsTunnelArgs struct {
	// The channels of OTS tunnel. Each element contains the following attributes:
	Channels GetTunnelsTunnelChannelArrayInput `pulumi:"channels"`
	// The creation time of the Tunnel.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Whether the tunnel has expired.
	Expired pulumi.BoolInput `pulumi:"expired"`
	// The resource ID. The value is `<instance_name>:<table_name>:<tunnel_name>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of OTS instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The name of OTS table.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// The tunnel id of the OTS which could not be changed.
	TunnelId pulumi.StringInput `pulumi:"tunnelId"`
	// The tunnel name of the OTS which could not be changed.
	TunnelName pulumi.StringInput `pulumi:"tunnelName"`
	// The latest consumption time of the tunnel, unix time in nanosecond.
	TunnelRpo pulumi.IntInput `pulumi:"tunnelRpo"`
	// The stage of OTS tunnel, valid values: `InitBaseDataAndStreamShard`, `ProcessBaseData`, `ProcessStream`.
	TunnelStage pulumi.StringInput `pulumi:"tunnelStage"`
	// The type of the OTS tunnel, valid values: `BaseAndStream`, `BaseData`, `Stream`.
	TunnelType pulumi.StringInput `pulumi:"tunnelType"`
}

func (GetTunnelsTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTunnelsTunnel)(nil)).Elem()
}

func (i GetTunnelsTunnelArgs) ToGetTunnelsTunnelOutput() GetTunnelsTunnelOutput {
	return i.ToGetTunnelsTunnelOutputWithContext(context.Background())
}

func (i GetTunnelsTunnelArgs) ToGetTunnelsTunnelOutputWithContext(ctx context.Context) GetTunnelsTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTunnelsTunnelOutput)
}

// GetTunnelsTunnelArrayInput is an input type that accepts GetTunnelsTunnelArray and GetTunnelsTunnelArrayOutput values.
// You can construct a concrete instance of `GetTunnelsTunnelArrayInput` via:
//
//	GetTunnelsTunnelArray{ GetTunnelsTunnelArgs{...} }
type GetTunnelsTunnelArrayInput interface {
	pulumi.Input

	ToGetTunnelsTunnelArrayOutput() GetTunnelsTunnelArrayOutput
	ToGetTunnelsTunnelArrayOutputWithContext(context.Context) GetTunnelsTunnelArrayOutput
}

type GetTunnelsTunnelArray []GetTunnelsTunnelInput

func (GetTunnelsTunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTunnelsTunnel)(nil)).Elem()
}

func (i GetTunnelsTunnelArray) ToGetTunnelsTunnelArrayOutput() GetTunnelsTunnelArrayOutput {
	return i.ToGetTunnelsTunnelArrayOutputWithContext(context.Background())
}

func (i GetTunnelsTunnelArray) ToGetTunnelsTunnelArrayOutputWithContext(ctx context.Context) GetTunnelsTunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTunnelsTunnelArrayOutput)
}

type GetTunnelsTunnelOutput struct{ *pulumi.OutputState }

func (GetTunnelsTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTunnelsTunnel)(nil)).Elem()
}

func (o GetTunnelsTunnelOutput) ToGetTunnelsTunnelOutput() GetTunnelsTunnelOutput {
	return o
}

func (o GetTunnelsTunnelOutput) ToGetTunnelsTunnelOutputWithContext(ctx context.Context) GetTunnelsTunnelOutput {
	return o
}

// The channels of OTS tunnel. Each element contains the following attributes:
func (o GetTunnelsTunnelOutput) Channels() GetTunnelsTunnelChannelArrayOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) []GetTunnelsTunnelChannel { return v.Channels }).(GetTunnelsTunnelChannelArrayOutput)
}

// The creation time of the Tunnel.
func (o GetTunnelsTunnelOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Whether the tunnel has expired.
func (o GetTunnelsTunnelOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) bool { return v.Expired }).(pulumi.BoolOutput)
}

// The resource ID. The value is `<instance_name>:<table_name>:<tunnel_name>`.
func (o GetTunnelsTunnelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) string { return v.Id }).(pulumi.StringOutput)
}

// The name of OTS instance.
func (o GetTunnelsTunnelOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The name of OTS table.
func (o GetTunnelsTunnelOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) string { return v.TableName }).(pulumi.StringOutput)
}

// The tunnel id of the OTS which could not be changed.
func (o GetTunnelsTunnelOutput) TunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) string { return v.TunnelId }).(pulumi.StringOutput)
}

// The tunnel name of the OTS which could not be changed.
func (o GetTunnelsTunnelOutput) TunnelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) string { return v.TunnelName }).(pulumi.StringOutput)
}

// The latest consumption time of the tunnel, unix time in nanosecond.
func (o GetTunnelsTunnelOutput) TunnelRpo() pulumi.IntOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) int { return v.TunnelRpo }).(pulumi.IntOutput)
}

// The stage of OTS tunnel, valid values: `InitBaseDataAndStreamShard`, `ProcessBaseData`, `ProcessStream`.
func (o GetTunnelsTunnelOutput) TunnelStage() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) string { return v.TunnelStage }).(pulumi.StringOutput)
}

// The type of the OTS tunnel, valid values: `BaseAndStream`, `BaseData`, `Stream`.
func (o GetTunnelsTunnelOutput) TunnelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnel) string { return v.TunnelType }).(pulumi.StringOutput)
}

type GetTunnelsTunnelArrayOutput struct{ *pulumi.OutputState }

func (GetTunnelsTunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTunnelsTunnel)(nil)).Elem()
}

func (o GetTunnelsTunnelArrayOutput) ToGetTunnelsTunnelArrayOutput() GetTunnelsTunnelArrayOutput {
	return o
}

func (o GetTunnelsTunnelArrayOutput) ToGetTunnelsTunnelArrayOutputWithContext(ctx context.Context) GetTunnelsTunnelArrayOutput {
	return o
}

func (o GetTunnelsTunnelArrayOutput) Index(i pulumi.IntInput) GetTunnelsTunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTunnelsTunnel {
		return vs[0].([]GetTunnelsTunnel)[vs[1].(int)]
	}).(GetTunnelsTunnelOutput)
}

type GetTunnelsTunnelChannel struct {
	// The id of the channel.
	ChannelId string `pulumi:"channelId"`
	// The latest consumption time of the channel, unix time in nanosecond
	ChannelRpo int `pulumi:"channelRpo"`
	// The status of the channel, valid values: `WAIT`, `OPEN`, `CLOSING`, `CLOSE`, `TERMINATED`.
	ChannelStatus string `pulumi:"channelStatus"`
	// The type of the channel, valid values: `BaseData`, `Stream`.
	ChannelType string `pulumi:"channelType"`
	// The client id of the channel.
	ClientId string `pulumi:"clientId"`
}

// GetTunnelsTunnelChannelInput is an input type that accepts GetTunnelsTunnelChannelArgs and GetTunnelsTunnelChannelOutput values.
// You can construct a concrete instance of `GetTunnelsTunnelChannelInput` via:
//
//	GetTunnelsTunnelChannelArgs{...}
type GetTunnelsTunnelChannelInput interface {
	pulumi.Input

	ToGetTunnelsTunnelChannelOutput() GetTunnelsTunnelChannelOutput
	ToGetTunnelsTunnelChannelOutputWithContext(context.Context) GetTunnelsTunnelChannelOutput
}

type GetTunnelsTunnelChannelArgs struct {
	// The id of the channel.
	ChannelId pulumi.StringInput `pulumi:"channelId"`
	// The latest consumption time of the channel, unix time in nanosecond
	ChannelRpo pulumi.IntInput `pulumi:"channelRpo"`
	// The status of the channel, valid values: `WAIT`, `OPEN`, `CLOSING`, `CLOSE`, `TERMINATED`.
	ChannelStatus pulumi.StringInput `pulumi:"channelStatus"`
	// The type of the channel, valid values: `BaseData`, `Stream`.
	ChannelType pulumi.StringInput `pulumi:"channelType"`
	// The client id of the channel.
	ClientId pulumi.StringInput `pulumi:"clientId"`
}

func (GetTunnelsTunnelChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTunnelsTunnelChannel)(nil)).Elem()
}

func (i GetTunnelsTunnelChannelArgs) ToGetTunnelsTunnelChannelOutput() GetTunnelsTunnelChannelOutput {
	return i.ToGetTunnelsTunnelChannelOutputWithContext(context.Background())
}

func (i GetTunnelsTunnelChannelArgs) ToGetTunnelsTunnelChannelOutputWithContext(ctx context.Context) GetTunnelsTunnelChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTunnelsTunnelChannelOutput)
}

// GetTunnelsTunnelChannelArrayInput is an input type that accepts GetTunnelsTunnelChannelArray and GetTunnelsTunnelChannelArrayOutput values.
// You can construct a concrete instance of `GetTunnelsTunnelChannelArrayInput` via:
//
//	GetTunnelsTunnelChannelArray{ GetTunnelsTunnelChannelArgs{...} }
type GetTunnelsTunnelChannelArrayInput interface {
	pulumi.Input

	ToGetTunnelsTunnelChannelArrayOutput() GetTunnelsTunnelChannelArrayOutput
	ToGetTunnelsTunnelChannelArrayOutputWithContext(context.Context) GetTunnelsTunnelChannelArrayOutput
}

type GetTunnelsTunnelChannelArray []GetTunnelsTunnelChannelInput

func (GetTunnelsTunnelChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTunnelsTunnelChannel)(nil)).Elem()
}

func (i GetTunnelsTunnelChannelArray) ToGetTunnelsTunnelChannelArrayOutput() GetTunnelsTunnelChannelArrayOutput {
	return i.ToGetTunnelsTunnelChannelArrayOutputWithContext(context.Background())
}

func (i GetTunnelsTunnelChannelArray) ToGetTunnelsTunnelChannelArrayOutputWithContext(ctx context.Context) GetTunnelsTunnelChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTunnelsTunnelChannelArrayOutput)
}

type GetTunnelsTunnelChannelOutput struct{ *pulumi.OutputState }

func (GetTunnelsTunnelChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTunnelsTunnelChannel)(nil)).Elem()
}

func (o GetTunnelsTunnelChannelOutput) ToGetTunnelsTunnelChannelOutput() GetTunnelsTunnelChannelOutput {
	return o
}

func (o GetTunnelsTunnelChannelOutput) ToGetTunnelsTunnelChannelOutputWithContext(ctx context.Context) GetTunnelsTunnelChannelOutput {
	return o
}

// The id of the channel.
func (o GetTunnelsTunnelChannelOutput) ChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnelChannel) string { return v.ChannelId }).(pulumi.StringOutput)
}

// The latest consumption time of the channel, unix time in nanosecond
func (o GetTunnelsTunnelChannelOutput) ChannelRpo() pulumi.IntOutput {
	return o.ApplyT(func(v GetTunnelsTunnelChannel) int { return v.ChannelRpo }).(pulumi.IntOutput)
}

// The status of the channel, valid values: `WAIT`, `OPEN`, `CLOSING`, `CLOSE`, `TERMINATED`.
func (o GetTunnelsTunnelChannelOutput) ChannelStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnelChannel) string { return v.ChannelStatus }).(pulumi.StringOutput)
}

// The type of the channel, valid values: `BaseData`, `Stream`.
func (o GetTunnelsTunnelChannelOutput) ChannelType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnelChannel) string { return v.ChannelType }).(pulumi.StringOutput)
}

// The client id of the channel.
func (o GetTunnelsTunnelChannelOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelsTunnelChannel) string { return v.ClientId }).(pulumi.StringOutput)
}

type GetTunnelsTunnelChannelArrayOutput struct{ *pulumi.OutputState }

func (GetTunnelsTunnelChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTunnelsTunnelChannel)(nil)).Elem()
}

func (o GetTunnelsTunnelChannelArrayOutput) ToGetTunnelsTunnelChannelArrayOutput() GetTunnelsTunnelChannelArrayOutput {
	return o
}

func (o GetTunnelsTunnelChannelArrayOutput) ToGetTunnelsTunnelChannelArrayOutputWithContext(ctx context.Context) GetTunnelsTunnelChannelArrayOutput {
	return o
}

func (o GetTunnelsTunnelChannelArrayOutput) Index(i pulumi.IntInput) GetTunnelsTunnelChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTunnelsTunnelChannel {
		return vs[0].([]GetTunnelsTunnelChannel)[vs[1].(int)]
	}).(GetTunnelsTunnelChannelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TableDefinedColumnInput)(nil)).Elem(), TableDefinedColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableDefinedColumnArrayInput)(nil)).Elem(), TableDefinedColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TablePrimaryKeyInput)(nil)).Elem(), TablePrimaryKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TablePrimaryKeyArrayInput)(nil)).Elem(), TablePrimaryKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelChannelInput)(nil)).Elem(), TunnelChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelChannelArrayInput)(nil)).Elem(), TunnelChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAttachmentsAttachmentInput)(nil)).Elem(), GetInstanceAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAttachmentsAttachmentArrayInput)(nil)).Elem(), GetInstanceAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTablesTableInput)(nil)).Elem(), GetTablesTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTablesTableArrayInput)(nil)).Elem(), GetTablesTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTablesTableDefinedColumnInput)(nil)).Elem(), GetTablesTableDefinedColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTablesTableDefinedColumnArrayInput)(nil)).Elem(), GetTablesTableDefinedColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTablesTablePrimaryKeyInput)(nil)).Elem(), GetTablesTablePrimaryKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTablesTablePrimaryKeyArrayInput)(nil)).Elem(), GetTablesTablePrimaryKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTunnelsTunnelInput)(nil)).Elem(), GetTunnelsTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTunnelsTunnelArrayInput)(nil)).Elem(), GetTunnelsTunnelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTunnelsTunnelChannelInput)(nil)).Elem(), GetTunnelsTunnelChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTunnelsTunnelChannelArrayInput)(nil)).Elem(), GetTunnelsTunnelChannelArray{})
	pulumi.RegisterOutputType(TableDefinedColumnOutput{})
	pulumi.RegisterOutputType(TableDefinedColumnArrayOutput{})
	pulumi.RegisterOutputType(TablePrimaryKeyOutput{})
	pulumi.RegisterOutputType(TablePrimaryKeyArrayOutput{})
	pulumi.RegisterOutputType(TunnelChannelOutput{})
	pulumi.RegisterOutputType(TunnelChannelArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetInstanceAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetTablesTableOutput{})
	pulumi.RegisterOutputType(GetTablesTableArrayOutput{})
	pulumi.RegisterOutputType(GetTablesTableDefinedColumnOutput{})
	pulumi.RegisterOutputType(GetTablesTableDefinedColumnArrayOutput{})
	pulumi.RegisterOutputType(GetTablesTablePrimaryKeyOutput{})
	pulumi.RegisterOutputType(GetTablesTablePrimaryKeyArrayOutput{})
	pulumi.RegisterOutputType(GetTunnelsTunnelOutput{})
	pulumi.RegisterOutputType(GetTunnelsTunnelArrayOutput{})
	pulumi.RegisterOutputType(GetTunnelsTunnelChannelOutput{})
	pulumi.RegisterOutputType(GetTunnelsTunnelChannelArrayOutput{})
}
