// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Cms Sls Groups of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.171.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.cms.getSlsGroups({
 *     ids: ["example_id"],
 * });
 * export const cmsSlsGroupId1 = ids.then(ids => ids.groups?[0]?.id);
 * const nameRegex = alicloud.cms.getSlsGroups({
 *     nameRegex: "^my-SlsGroup",
 * });
 * export const cmsSlsGroupId2 = nameRegex.then(nameRegex => nameRegex.groups?[0]?.id);
 * ```
 */
export function getSlsGroups(args?: GetSlsGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetSlsGroupsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:cms/getSlsGroups:getSlsGroups", {
        "ids": args.ids,
        "keyword": args.keyword,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
    }, opts);
}

/**
 * A collection of arguments for invoking getSlsGroups.
 */
export interface GetSlsGroupsArgs {
    /**
     * A list of Sls Group IDs. Its element value is same as Sls Group Name.
     */
    ids?: string[];
    /**
     * The keywords of the `slsGroupName` or `slsGroupDescription` of the Sls Group.
     */
    keyword?: string;
    /**
     * A regex string to filter results by Sls Group name.
     */
    nameRegex?: string;
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
}

/**
 * A collection of values returned by getSlsGroups.
 */
export interface GetSlsGroupsResult {
    readonly groups: outputs.cms.GetSlsGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly keyword?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
}

export function getSlsGroupsOutput(args?: GetSlsGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSlsGroupsResult> {
    return pulumi.output(args).apply(a => getSlsGroups(a, opts))
}

/**
 * A collection of arguments for invoking getSlsGroups.
 */
export interface GetSlsGroupsOutputArgs {
    /**
     * A list of Sls Group IDs. Its element value is same as Sls Group Name.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The keywords of the `slsGroupName` or `slsGroupDescription` of the Sls Group.
     */
    keyword?: pulumi.Input<string>;
    /**
     * A regex string to filter results by Sls Group name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
}
