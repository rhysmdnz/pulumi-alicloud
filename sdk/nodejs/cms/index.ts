// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./alarm";
export * from "./alarmContact";
export * from "./alarmContactGroup";
export * from "./dynamicTagGroup";
export * from "./eventRule";
export * from "./getAlarmContactGroups";
export * from "./getAlarmContacts";
export * from "./getDynamicTagGroups";
export * from "./getEventRules";
export * from "./getGroupMetricRules";
export * from "./getHybridMonitorDatas";
export * from "./getHybridMonitorFcTasks";
export * from "./getHybridMonitorSlsTasks";
export * from "./getMetricRuleTemplates";
export * from "./getMonitorGroupInstances";
export * from "./getMonitorGroups";
export * from "./getNamespaces";
export * from "./getService";
export * from "./getSlsGroups";
export * from "./groupMetricRule";
export * from "./hybridMonitorFcTask";
export * from "./hybridMonitorSlsTask";
export * from "./metricRuleTemplate";
export * from "./monitorGroup";
export * from "./monitorGroupInstances";
export * from "./namespace";
export * from "./siteMonitor";
export * from "./slsGroup";

// Import resources to register:
import { Alarm } from "./alarm";
import { AlarmContact } from "./alarmContact";
import { AlarmContactGroup } from "./alarmContactGroup";
import { DynamicTagGroup } from "./dynamicTagGroup";
import { EventRule } from "./eventRule";
import { GroupMetricRule } from "./groupMetricRule";
import { HybridMonitorFcTask } from "./hybridMonitorFcTask";
import { HybridMonitorSlsTask } from "./hybridMonitorSlsTask";
import { MetricRuleTemplate } from "./metricRuleTemplate";
import { MonitorGroup } from "./monitorGroup";
import { MonitorGroupInstances } from "./monitorGroupInstances";
import { Namespace } from "./namespace";
import { SiteMonitor } from "./siteMonitor";
import { SlsGroup } from "./slsGroup";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:cms/alarm:Alarm":
                return new Alarm(name, <any>undefined, { urn })
            case "alicloud:cms/alarmContact:AlarmContact":
                return new AlarmContact(name, <any>undefined, { urn })
            case "alicloud:cms/alarmContactGroup:AlarmContactGroup":
                return new AlarmContactGroup(name, <any>undefined, { urn })
            case "alicloud:cms/dynamicTagGroup:DynamicTagGroup":
                return new DynamicTagGroup(name, <any>undefined, { urn })
            case "alicloud:cms/eventRule:EventRule":
                return new EventRule(name, <any>undefined, { urn })
            case "alicloud:cms/groupMetricRule:GroupMetricRule":
                return new GroupMetricRule(name, <any>undefined, { urn })
            case "alicloud:cms/hybridMonitorFcTask:HybridMonitorFcTask":
                return new HybridMonitorFcTask(name, <any>undefined, { urn })
            case "alicloud:cms/hybridMonitorSlsTask:HybridMonitorSlsTask":
                return new HybridMonitorSlsTask(name, <any>undefined, { urn })
            case "alicloud:cms/metricRuleTemplate:MetricRuleTemplate":
                return new MetricRuleTemplate(name, <any>undefined, { urn })
            case "alicloud:cms/monitorGroup:MonitorGroup":
                return new MonitorGroup(name, <any>undefined, { urn })
            case "alicloud:cms/monitorGroupInstances:MonitorGroupInstances":
                return new MonitorGroupInstances(name, <any>undefined, { urn })
            case "alicloud:cms/namespace:Namespace":
                return new Namespace(name, <any>undefined, { urn })
            case "alicloud:cms/siteMonitor:SiteMonitor":
                return new SiteMonitor(name, <any>undefined, { urn })
            case "alicloud:cms/slsGroup:SlsGroup":
                return new SlsGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "cms/alarm", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/alarmContact", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/alarmContactGroup", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/dynamicTagGroup", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/eventRule", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/groupMetricRule", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/hybridMonitorFcTask", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/hybridMonitorSlsTask", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/metricRuleTemplate", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/monitorGroup", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/monitorGroupInstances", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/namespace", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/siteMonitor", _module)
pulumi.runtime.registerResourceModule("alicloud", "cms/slsGroup", _module)
