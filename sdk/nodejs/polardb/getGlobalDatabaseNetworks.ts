// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the PolarDB Global Database Networks of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.181.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.polardb.getGlobalDatabaseNetworks({
 *     ids: ["example_id"],
 * });
 * export const polardbGlobalDatabaseNetworkId1 = ids.then(ids => ids.networks?[0]?.id);
 * const description = alicloud.polardb.getGlobalDatabaseNetworks({
 *     description: "example_description",
 * });
 * export const polardbGlobalDatabaseNetworkId2 = description.then(description => description.networks?[0]?.id);
 * ```
 */
export function getGlobalDatabaseNetworks(args?: GetGlobalDatabaseNetworksArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalDatabaseNetworksResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:polardb/getGlobalDatabaseNetworks:getGlobalDatabaseNetworks", {
        "dbClusterId": args.dbClusterId,
        "description": args.description,
        "gdnId": args.gdnId,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getGlobalDatabaseNetworks.
 */
export interface GetGlobalDatabaseNetworksArgs {
    /**
     * The ID of the PolarDB cluster.
     */
    dbClusterId?: string;
    /**
     * The description of the Global Database Network.
     */
    description?: string;
    /**
     * The ID of the Global Database Network.
     */
    gdnId?: string;
    /**
     * A list of Global Database Network IDs.
     */
    ids?: string[];
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
    /**
     * The status of the Global Database Network.
     */
    status?: string;
}

/**
 * A collection of values returned by getGlobalDatabaseNetworks.
 */
export interface GetGlobalDatabaseNetworksResult {
    readonly dbClusterId?: string;
    readonly description?: string;
    readonly gdnId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly networks: outputs.polardb.GetGlobalDatabaseNetworksNetwork[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    readonly status?: string;
}

export function getGlobalDatabaseNetworksOutput(args?: GetGlobalDatabaseNetworksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlobalDatabaseNetworksResult> {
    return pulumi.output(args).apply(a => getGlobalDatabaseNetworks(a, opts))
}

/**
 * A collection of arguments for invoking getGlobalDatabaseNetworks.
 */
export interface GetGlobalDatabaseNetworksOutputArgs {
    /**
     * The ID of the PolarDB cluster.
     */
    dbClusterId?: pulumi.Input<string>;
    /**
     * The description of the Global Database Network.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the Global Database Network.
     */
    gdnId?: pulumi.Input<string>;
    /**
     * A list of Global Database Network IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    /**
     * The status of the Global Database Network.
     */
    status?: pulumi.Input<string>;
}
