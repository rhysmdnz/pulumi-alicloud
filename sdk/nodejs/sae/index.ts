// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./application";
export * from "./applicationScalingRule";
export * from "./configMap";
export * from "./getApplicationScalingRules";
export * from "./getApplications";
export * from "./getConfigMaps";
export * from "./getGreyTagRoutes";
export * from "./getIngresses";
export * from "./getInstanceSpecifications";
export * from "./getNamespaces";
export * from "./getService";
export * from "./greyTagRoute";
export * from "./ingress";
export * from "./loadBalancerInternet";
export * from "./loadBalancerIntranet";
export * from "./namespace";

// Import resources to register:
import { Application } from "./application";
import { ApplicationScalingRule } from "./applicationScalingRule";
import { ConfigMap } from "./configMap";
import { GreyTagRoute } from "./greyTagRoute";
import { Ingress } from "./ingress";
import { LoadBalancerInternet } from "./loadBalancerInternet";
import { LoadBalancerIntranet } from "./loadBalancerIntranet";
import { Namespace } from "./namespace";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:sae/application:Application":
                return new Application(name, <any>undefined, { urn })
            case "alicloud:sae/applicationScalingRule:ApplicationScalingRule":
                return new ApplicationScalingRule(name, <any>undefined, { urn })
            case "alicloud:sae/configMap:ConfigMap":
                return new ConfigMap(name, <any>undefined, { urn })
            case "alicloud:sae/greyTagRoute:GreyTagRoute":
                return new GreyTagRoute(name, <any>undefined, { urn })
            case "alicloud:sae/ingress:Ingress":
                return new Ingress(name, <any>undefined, { urn })
            case "alicloud:sae/loadBalancerInternet:LoadBalancerInternet":
                return new LoadBalancerInternet(name, <any>undefined, { urn })
            case "alicloud:sae/loadBalancerIntranet:LoadBalancerIntranet":
                return new LoadBalancerIntranet(name, <any>undefined, { urn })
            case "alicloud:sae/namespace:Namespace":
                return new Namespace(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "sae/application", _module)
pulumi.runtime.registerResourceModule("alicloud", "sae/applicationScalingRule", _module)
pulumi.runtime.registerResourceModule("alicloud", "sae/configMap", _module)
pulumi.runtime.registerResourceModule("alicloud", "sae/greyTagRoute", _module)
pulumi.runtime.registerResourceModule("alicloud", "sae/ingress", _module)
pulumi.runtime.registerResourceModule("alicloud", "sae/loadBalancerInternet", _module)
pulumi.runtime.registerResourceModule("alicloud", "sae/loadBalancerIntranet", _module)
pulumi.runtime.registerResourceModule("alicloud", "sae/namespace", _module)
