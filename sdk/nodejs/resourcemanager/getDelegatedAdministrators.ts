// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Resource Manager Delegated Administrators of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.181.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.resourcemanager.getDelegatedAdministrators({
 *     ids: ["example_value"],
 * });
 * export const resourceManagerDelegatedAdministratorId1 = ids.then(ids => ids.administrators?[0]?.id);
 * ```
 */
export function getDelegatedAdministrators(args?: GetDelegatedAdministratorsArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegatedAdministratorsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:resourcemanager/getDelegatedAdministrators:getDelegatedAdministrators", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "servicePrincipal": args.servicePrincipal,
    }, opts);
}

/**
 * A collection of arguments for invoking getDelegatedAdministrators.
 */
export interface GetDelegatedAdministratorsArgs {
    /**
     * A list of Delegated Administrator IDs.
     */
    ids?: string[];
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
    /**
     * The identity of the trusted service.
     */
    servicePrincipal?: string;
}

/**
 * A collection of values returned by getDelegatedAdministrators.
 */
export interface GetDelegatedAdministratorsResult {
    readonly administrators: outputs.resourcemanager.GetDelegatedAdministratorsAdministrator[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    readonly servicePrincipal?: string;
}

export function getDelegatedAdministratorsOutput(args?: GetDelegatedAdministratorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegatedAdministratorsResult> {
    return pulumi.output(args).apply(a => getDelegatedAdministrators(a, opts))
}

/**
 * A collection of arguments for invoking getDelegatedAdministrators.
 */
export interface GetDelegatedAdministratorsOutputArgs {
    /**
     * A list of Delegated Administrator IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    /**
     * The identity of the trusted service.
     */
    servicePrincipal?: pulumi.Input<string>;
}
